# -*- coding: utf-8 -*-
# Generated by Django 1.11.17 on 2022-12-13 13:50
from __future__ import unicode_literals

import datetime
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
from django.utils.timezone import utc


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('django_api_base', '0002_auto_20221213_1350'),
    ]

    operations = [
        migrations.CreateModel(
            name='Advertisement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=150)),
                ('date_start', models.DateTimeField(blank=True, null=True)),
                ('date_end', models.DateTimeField(blank=True, null=True)),
                ('image', models.CharField(blank=True, default='', max_length=200)),
                ('user', models.BooleanField(default=False)),
                ('partner', models.BooleanField(default=False)),
                ('added_on', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Assistants',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False)),
                ('assistant_name', models.CharField(blank=True, default='', max_length=200)),
                ('id_proof', models.CharField(blank=True, default='', max_length=200)),
                ('photo', models.CharField(blank=True, default='', max_length=200)),
                ('added_on', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Attachments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False)),
                ('attachment', models.CharField(blank=True, default='', max_length=200)),
                ('doc_type', models.CharField(choices=[('fitness_certificate', 'Fitness Certificate'), ('tax_certificate', 'Tax Certificate'), ('driver_license', 'Driver License'), ('commercial_insurance', 'Commercial Insurance'), ('registration_certificate', 'Registration Certificate')], default='driver_license', max_length=100)),
                ('added_on', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BaseProfile',
            fields=[
                ('userprofile_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='django_api_base.UserProfile')),
                ('deleted', models.BooleanField(default=False)),
                ('first_time_activation', models.BooleanField(default=True)),
                ('current_lat', models.CharField(blank=True, default='', max_length=200)),
                ('current_lng', models.CharField(blank=True, default='', max_length=200)),
                ('nationality', models.CharField(blank=True, default='', max_length=200)),
                ('age', models.IntegerField(default=0)),
                ('profile_pic', models.CharField(blank=True, default='', max_length=500)),
                ('language', models.CharField(choices=[('EN', 'English'), ('ES', 'Spanish')], default='EN', max_length=10)),
                ('status', models.CharField(choices=[('active', 'Active'), ('blocked', 'Blocked'), ('deleted', 'Deleted'), ('suspended', 'Suspended'), ('fleet_verified', 'Fleet Verified'), ('not_verified', 'Not Verified')], default='not_verified', max_length=100)),
                ('designation', models.CharField(blank=True, default='', max_length=500)),
                ('deposit_needed', models.FloatField(default=645)),
                ('ceo_id_proof', models.CharField(blank=True, default='', max_length=200)),
                ('address', models.CharField(blank=True, default='', max_length=200)),
                ('registration_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('approved_on', models.DateTimeField(blank=True, null=True)),
                ('user_type', models.CharField(choices=[('super_user', 'Super User'), ('admin_user', 'Admin User'), ('fleet_admin', 'Fleet Admin'), ('driver', 'Driver'), ('app_user', 'App User'), ('operator', 'Operator')], default='app_user', max_length=100)),
                ('serviceable_area', models.CharField(blank=True, default='', max_length=500)),
                ('commission', models.FloatField(default=25)),
                ('is_new_user', models.BooleanField(default=False)),
                ('drive_status', models.BooleanField(default=True)),
                ('in_trip', models.BooleanField(default=False)),
                ('rating', models.FloatField(default=5)),
                ('visaUserToken', models.CharField(blank=True, default='', max_length=500)),
                ('payment_processed', models.BooleanField(default=False)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='api_base.BaseProfile')),
            ],
            options={
                'abstract': False,
            },
            bases=('django_api_base.userprofile', models.Model),
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False)),
                ('city_name', models.CharField(max_length=200)),
                ('city_lat', models.CharField(max_length=200)),
                ('city_lng', models.CharField(max_length=200)),
                ('added_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('polygon_data', models.TextField(default='', null=True)),
                ('cash_only', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Commodity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False)),
                ('item_name', models.CharField(max_length=200)),
                ('length', models.FloatField(default=0)),
                ('breadth', models.FloatField(default=0)),
                ('height', models.FloatField(default=0)),
                ('volume', models.FloatField(default=0)),
                ('image', models.CharField(blank=True, default='', max_length=200)),
                ('charge', models.FloatField(default=0)),
                ('installation_charge', models.FloatField(default=0)),
                ('material_type', models.CharField(blank=True, default='', max_length=200)),
                ('added_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_plugable', models.BooleanField(default=False)),
                ('loaders', models.IntegerField(default=1)),
                ('added_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_base.BaseProfile')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_base.City')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Damage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False)),
                ('count', models.IntegerField(default=0)),
                ('photo', models.CharField(blank=True, default='', max_length=200)),
                ('damage_type', models.CharField(choices=[('partial', 'Partial Damage'), ('full', 'Full Damage'), ('stolen', 'Stolen')], default='partial', max_length=100)),
                ('added_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('description', models.TextField(blank=True, default='')),
                ('item_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api_base.Commodity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DamageDescriptions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False)),
                ('description', models.TextField(blank=True, default='')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DamagePhotos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False)),
                ('photo', models.CharField(max_length=200)),
                ('item_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api_base.Commodity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DamageReportPhotos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False)),
                ('photo', models.CharField(max_length=200)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False)),
                ('rate_from', models.FloatField(default=0)),
                ('rate_to', models.FloatField(default=0)),
                ('discount', models.FloatField(default=0)),
                ('added_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('active', 'Active'), ('deleted', 'Deleted')], default='active', max_length=100)),
                ('added_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_base.BaseProfile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=200)),
                ('latitude', models.CharField(max_length=200)),
                ('longitude', models.CharField(max_length=200)),
                ('added_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_base.City')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Documents',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document', models.CharField(blank=True, default='', max_length=200)),
                ('document_type', models.CharField(choices=[('faq', 'FAQ'), ('privacy_policy', 'Privacy Policy'), ('terms_conditions', 'Terms & Conditions')], default='faq', max_length=100)),
                ('language', models.CharField(choices=[('en', 'English'), ('es', 'Español')], default='es', max_length=100)),
                ('app_type', models.CharField(choices=[('user', 'User App'), ('partner', 'Partner App')], default='user', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='DriverOffer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False)),
                ('offer_based_on', models.CharField(choices=[('time', 'TIME'), ('trip', 'TRIP')], default='time', max_length=20)),
                ('offer_applied_to', models.CharField(choices=[('fleet', 'FLEET'), ('user', 'USER')], default='fleet', max_length=20)),
                ('offer_type', models.CharField(choices=[('cash', 'CASH'), ('discount', 'DISCOUNT')], default='cash', max_length=20)),
                ('total_duration', models.FloatField(default=0)),
                ('total_trip_count', models.IntegerField(default=0)),
                ('offer_base', models.CharField(choices=[('daily', 'DAILY'), ('weekly', 'WEEKLY')], default='daily', max_length=20)),
                ('offer_commission_cash', models.FloatField(default=0)),
                ('offer_commission_percent', models.FloatField(default=0)),
                ('offer_valid_from', models.DateField(default=django.utils.timezone.now)),
                ('offer_valid_to', models.DateField(default=django.utils.timezone.now)),
                ('added_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_base.BaseProfile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DriveStatusHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False)),
                ('status_from', models.DateTimeField(default=django.utils.timezone.now)),
                ('status_to', models.DateTimeField(blank=True, null=True)),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_base.BaseProfile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NotificationHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False)),
                ('sent_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('read_status', models.BooleanField(default=False)),
                ('read_on', models.DateTimeField(blank=True, null=True)),
                ('is_valid', models.BooleanField(default=True)),
                ('time_out', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Notifications',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False)),
                ('message_headline', models.CharField(blank=True, default='', max_length=200)),
                ('message', models.TextField(blank=True, default='')),
                ('type', models.CharField(choices=[('trip_request', 'Trip Requested'), ('trip_scheduled', 'Trip Scheduled'), ('trip_reminder', 'Trip Reminder'), ('trip_cancelled', 'Trip Cancelled'), ('already_accepted', 'Already Accepted'), ('trip_accepted', 'Trip Accepted'), ('start_loading', 'Start Loading'), ('trip_started', 'Trip Started'), ('trip_completed', 'Trip Completed'), ('search_failed', 'Search Failed'), ('promotion', 'Promotion'), ('offer', 'Offer'), ('missed_transfer', 'Missed Transfer'), ('refund_initiated', 'Refund Initiated')], default='trip_request', max_length=100)),
                ('offer_id', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='api_base.DriverOffer')),
                ('receiver', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='api_base.BaseProfile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NotificationsSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False)),
                ('promotions', models.BooleanField(default=True)),
                ('momentalert', models.BooleanField(default=True)),
                ('user_profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api_base.BaseProfile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OnOffSwitch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.TimeField(blank=True, null=True)),
                ('end_date', models.TimeField(blank=True, null=True)),
                ('status', models.BooleanField(default=True)),
                ('added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api_base.BaseProfile')),
            ],
        ),
        migrations.CreateModel(
            name='PayoutHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False)),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('total_bookings_amount', models.FloatField(default=0)),
                ('commission_amount_to_muberz', models.FloatField(default=0)),
                ('transfer_cash_in_drivers_hand', models.FloatField(default=0)),
                ('cash_incentives_earned_by_driver', models.FloatField(default=0)),
                ('drivers_earnings_from_transfers', models.FloatField(default=0)),
                ('drivers_earnings_from_discounts', models.FloatField(default=0)),
                ('net_payable_for_driver', models.FloatField(default=0)),
                ('amount_to_be_collected_from_driver', models.FloatField(default=0)),
                ('payment_processed', models.BooleanField(default=False)),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_base.BaseProfile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100)),
                ('percentage', models.FloatField(default=0)),
                ('short_description', models.CharField(blank=True, default='', max_length=500)),
                ('description', models.TextField(default='', null=True)),
                ('expiry', models.DateTimeField(blank=True, null=True)),
                ('added_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api_base.BaseProfile')),
            ],
        ),
        migrations.CreateModel(
            name='Promotions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False)),
                ('promo_text', models.CharField(blank=True, default='', max_length=200)),
                ('valid_from', models.DateTimeField(default=django.utils.timezone.now)),
                ('valid_through', models.DateTimeField(default=django.utils.timezone.now)),
                ('percentage', models.FloatField(default=0)),
                ('added_on', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating_value', models.FloatField(default=1)),
                ('added_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('status', models.BooleanField(default=True)),
                ('description', models.TextField(blank=True, default='')),
                ('rating_from', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='api_base.BaseProfile')),
                ('rating_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='a+', to='api_base.BaseProfile')),
            ],
        ),
        migrations.CreateModel(
            name='RefundManagement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False)),
                ('refund_cause', models.TextField()),
                ('date_added', models.DateTimeField(auto_now=True)),
                ('amount_to_refund', models.FloatField(default=0)),
                ('status', models.CharField(choices=[('requested', 'Refund Requested'), ('processing', 'Refund In Process'), ('initiated', 'Refund Initiated'), ('completed', 'Refund Complete')], default='requested', max_length=20)),
                ('added_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api_base.BaseProfile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SavedLocations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False)),
                ('latitude', models.CharField(blank=True, max_length=100, null=True)),
                ('longitude', models.CharField(blank=True, max_length=100, null=True)),
                ('loc_name', models.CharField(blank=True, max_length=200, null=True)),
                ('added_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_base.BaseProfile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SearchFailedLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False)),
                ('user', models.CharField(blank=True, default='', max_length=500)),
                ('reason', models.CharField(blank=True, default='', max_length=500)),
                ('excluded_driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_base.BaseProfile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SecurityDeposit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False)),
                ('capacity_from', models.FloatField(default=0)),
                ('capacity_to', models.FloatField(default=0)),
                ('deposit_needed', models.FloatField(default=0)),
                ('added_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_base.BaseProfile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SecurityDepositHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False)),
                ('security_deposit', models.FloatField(default=0)),
                ('added_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_base.BaseProfile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False)),
                ('service_from', models.CharField(blank=True, choices=[('packed', 'Packed'), ('unplugged', 'Unplugged')], max_length=100, null=True)),
                ('service_to', models.CharField(blank=True, choices=[('delivery', 'Delivery'), ('plugged', 'Plugged')], max_length=100, null=True)),
                ('service_name', models.CharField(choices=[('packed-packed', 'Transfer'), ('unpacked-packed', 'Relocation Package Plus'), ('unpacked-unpacked', 'Relocation Package Plus Plus Uncrating')], default='packed-packed', max_length=100)),
                ('display_service_name_en', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('service_description_en', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('display_service_name_es', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('service_description_es', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('is_plugable', models.BooleanField(default=False)),
                ('charge', models.FloatField(default=0)),
                ('added_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('added_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_base.BaseProfile')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_base.City')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ServiceableArea',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False)),
                ('latitude', models.CharField(blank=True, default='', max_length=100)),
                ('longitude', models.CharField(blank=True, default='', max_length=100)),
                ('loc_name', models.CharField(blank=True, default='', max_length=100)),
                ('charge', models.FloatField(default=0)),
                ('added_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('driver_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_base.BaseProfile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False)),
                ('date', models.DateTimeField(default=datetime.datetime(2022, 12, 13, 13, 50, 3, 76058, tzinfo=utc))),
                ('transactionID', models.CharField(blank=True, default='', max_length=500)),
                ('eTicket', models.CharField(blank=True, default='', max_length=500)),
                ('uniqueID', models.CharField(blank=True, default='', max_length=500)),
                ('amount', models.FloatField(default=0)),
                ('status', models.CharField(choices=[('pending', 'Payment Pending'), ('processing', 'Payment in Process'), ('completed', 'Payment Completed'), ('failed', 'Payment Failed')], default='pending', max_length=100)),
                ('payee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_base.BaseProfile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Transfer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False)),
                ('no_items', models.IntegerField(default=0)),
                ('source', models.CharField(blank=True, choices=[('commodity', 'Commodity'), ('truck', 'Truck')], max_length=100, null=True)),
                ('tot_volume', models.FloatField(default=0)),
                ('transfer_on', models.DateTimeField(blank=True, null=True)),
                ('commission', models.FloatField(default=0)),
                ('total_amount', models.FloatField(default=0)),
                ('amount_paid', models.FloatField(default=0)),
                ('damage_refund', models.FloatField(default=0)),
                ('penalty', models.FloatField(default=0)),
                ('advance_received', models.BooleanField(default=False)),
                ('payment_received', models.BooleanField(default=False)),
                ('advance_amount', models.FloatField(default=0)),
                ('payable_amount', models.FloatField(default=0)),
                ('payment_type', models.CharField(blank=True, choices=[('cash', 'Cash Payment'), ('card', 'Card Payment')], max_length=100, null=True)),
                ('instant_search', models.BooleanField(default=True)),
                ('status', models.CharField(choices=[('not_paid', 'Not Paid'), ('active', 'Active'), ('accepted', 'Accepted'), ('cancelled', 'Cancelled'), ('auto_cancelled', 'Auto Cancelled'), ('loading', 'Loading'), ('in_transit', 'In Transit'), ('completed', 'Completed')], default='not_paid', max_length=100)),
                ('cancel_comments', models.TextField(default='', null=True)),
                ('transfer_timed_out', models.BooleanField(default=False)),
                ('started_on', models.DateTimeField(blank=True, null=True)),
                ('completed_on', models.DateTimeField(blank=True, null=True)),
                ('added_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('installation_charge', models.FloatField(default=0)),
                ('service_charge', models.FloatField(default=0)),
                ('density_charge', models.FloatField(default=0)),
                ('discount_offered', models.FloatField(default=0)),
                ('distance', models.CharField(blank=True, max_length=200, null=True)),
                ('duration', models.CharField(blank=True, max_length=200, null=True)),
                ('damage_resolved', models.BooleanField(default=False)),
                ('refund_initiated', models.BooleanField(default=False)),
                ('helper_amount', models.FloatField(default=0)),
                ('helper_count', models.IntegerField(default=0)),
                ('cancel_notify_admin', models.BooleanField(default=False)),
                ('is_special_handling_required', models.BooleanField(default=False)),
                ('special_handling_fee', models.FloatField(default=0)),
                ('share_trip', models.BooleanField(default=False)),
                ('added_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='a+', to='api_base.BaseProfile')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_base.City')),
                ('driver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='api_base.BaseProfile')),
                ('helpers', models.ManyToManyField(blank=True, to='api_base.Assistants')),
                ('service_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api_base.Service')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TransferCommodity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False)),
                ('need_plugged', models.BooleanField(default=False)),
                ('added_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_base.BaseProfile')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_base.Commodity')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TransferLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False)),
                ('floor', models.IntegerField(default=0)),
                ('transfer_loc', models.CharField(blank=True, choices=[('1', 'House'), ('2', 'Apartment'), ('3', 'Flat'), ('4', 'Shop/Office')], max_length=100, null=True)),
                ('loc_lat', models.CharField(max_length=200)),
                ('loc_lng', models.CharField(max_length=200)),
                ('location_name', models.CharField(blank=True, default='', max_length=200)),
                ('loc_type', models.CharField(choices=[('pickup', 'Pickup'), ('drop', 'Drop')], default='pickup', max_length=100)),
                ('service_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api_base.Service')),
                ('transfer_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_base.Transfer')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TransferType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False)),
                ('transfer_from', models.CharField(choices=[('CH', 'CH'), ('EMBD', 'EMBD'), ('EMAD', 'EMAD')], default='CH', max_length=100)),
                ('transfer_to', models.CharField(choices=[('CH', 'CH'), ('EMBD', 'EMBD'), ('EMAD', 'EMAD')], default='CH', max_length=100)),
                ('charge', models.FloatField(default=0)),
                ('added_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('added_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_base.BaseProfile')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_base.City')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TruckCrew',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False)),
                ('capacity_from', models.FloatField(default=0)),
                ('capacity_to', models.FloatField(default=0)),
                ('no_drivers', models.IntegerField(default=1)),
                ('a', models.FloatField(default=1)),
                ('b', models.FloatField(default=1)),
                ('c', models.FloatField(default=1)),
                ('amount_per_helper', models.FloatField(default=2)),
                ('loading_peoples', models.IntegerField(default=0)),
                ('added_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_base.BaseProfile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TruckRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('sent', 'Sent'), ('time_out', 'Time Out'), ('accepted', 'Accepted'), ('rejected', 'Rejected'), ('cancelled', 'Cancelled'), ('requested', 'Requested'), ('auto_cancel', 'Auto Cancel')], default='sent', max_length=100)),
                ('sent_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('driver_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_base.BaseProfile')),
                ('transfer_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_base.Transfer')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TruckTypes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(choices=[('Trailer Truck', 'Trailer Truck'), ('Semi-Trailer Truck', 'Semi-Trailer Truck'), ('Large Truck', 'Large Truck'), ('Medium Truck', 'Medium Truck')], default='Trailer Truck', max_length=100)),
                ('vol_min', models.FloatField(default=1)),
                ('vol_max', models.FloatField(default=5)),
                ('image', models.CharField(blank=True, default='', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='VehicleDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False)),
                ('security_deposit', models.FloatField(default=0)),
                ('balance_deposit', models.FloatField(default=0)),
                ('reg_no', models.CharField(blank=True, default='', max_length=200)),
                ('location', models.CharField(blank=True, default='', max_length=200)),
                ('no_assistants', models.IntegerField(default=0)),
                ('drive_status', models.BooleanField(default=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('verified', 'Verified')], default='pending', max_length=100)),
                ('approved_on', models.DateTimeField(blank=True, null=True)),
                ('added_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('vehicle_volume', models.FloatField(default=0)),
                ('vehicle_height', models.FloatField(default=0)),
                ('added_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='a+', to='api_base.BaseProfile')),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='api_base.BaseProfile')),
                ('driver_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api_base.BaseProfile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='transferlocation',
            name='transfer_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api_base.TransferType'),
        ),
        migrations.AddField(
            model_name='transfercommodity',
            name='transfer_loc_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_base.TransferLocation'),
        ),
        migrations.AddField(
            model_name='transfer',
            name='transfer_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api_base.TransferType'),
        ),
        migrations.AddField(
            model_name='transaction',
            name='transfer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_base.Transfer'),
        ),
        migrations.AddField(
            model_name='searchfailedlog',
            name='transfer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_base.Transfer'),
        ),
        migrations.AddField(
            model_name='refundmanagement',
            name='transfer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_base.Transfer'),
        ),
        migrations.AddField(
            model_name='rating',
            name='transfer_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_base.Transfer'),
        ),
        migrations.AddField(
            model_name='promotions',
            name='damaged_item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_base.TransferCommodity'),
        ),
        migrations.AddField(
            model_name='promotions',
            name='transfer_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_base.Transfer'),
        ),
        migrations.AddField(
            model_name='payouthistory',
            name='transfers',
            field=models.ManyToManyField(blank=True, to='api_base.Transfer'),
        ),
        migrations.AddField(
            model_name='notifications',
            name='transfer_id',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='api_base.Transfer'),
        ),
        migrations.AddField(
            model_name='notificationhistory',
            name='notification_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_base.Notifications'),
        ),
        migrations.AddField(
            model_name='notificationhistory',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_base.BaseProfile'),
        ),
        migrations.AddField(
            model_name='discount',
            name='service_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_base.Service'),
        ),
        migrations.AddField(
            model_name='damagereportphotos',
            name='transfer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_base.Transfer'),
        ),
        migrations.AddField(
            model_name='damagephotos',
            name='transfer_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api_base.Transfer'),
        ),
        migrations.AddField(
            model_name='damagedescriptions',
            name='transfer_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_base.Transfer'),
        ),
        migrations.AddField(
            model_name='damage',
            name='transfer_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_base.Transfer'),
        ),
        migrations.AddField(
            model_name='baseprofile',
            name='city',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api_base.City'),
        ),
        migrations.AddField(
            model_name='baseprofile',
            name='fleet_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='a+', to='api_base.BaseProfile'),
        ),
        migrations.AddField(
            model_name='attachments',
            name='driver_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_base.BaseProfile'),
        ),
        migrations.AddField(
            model_name='assistants',
            name='driver_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_base.BaseProfile'),
        ),
        migrations.AddField(
            model_name='advertisement',
            name='added_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api_base.BaseProfile'),
        ),
    ]
